{"version":3,"file":"react-headless-pagination.cjs.development.js","sources":["../src/hooks/usePagination.tsx","../src/Pagination.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { IPaginationProps, IUsePagination } from \"../Pagination.d\";\r\n\r\nconst usePagination = ({\r\n  currentPage,\r\n  setCurrentPage,\r\n  truncableText = \"...\",\r\n  truncableClassName = \"\",\r\n  totalPages,\r\n  edgePageCount = 2,\r\n  middlePagesSiblingCount = 1,\r\n}: IPaginationProps): IUsePagination => {\r\n  const pages = Array(totalPages)\r\n    .fill(0)\r\n    .map((_, i) => i + 1);\r\n\r\n  const hasPreviousPage = currentPage > 1;\r\n  const hasNextPage = currentPage < totalPages;\r\n\r\n  const isReachedToFirst = currentPage <= middlePagesSiblingCount;\r\n  const isReachedToLast = currentPage + middlePagesSiblingCount >= totalPages;\r\n\r\n  const middlePages = React.useMemo(() => {\r\n    const middlePageCount = middlePagesSiblingCount * 2 + 1;\r\n    if (isReachedToFirst) {\r\n      return pages.slice(0, middlePageCount);\r\n    }\r\n    if (isReachedToLast) {\r\n      return pages.slice(-middlePageCount);\r\n    }\r\n    return pages.slice(\r\n      currentPage - middlePagesSiblingCount,\r\n      currentPage + middlePagesSiblingCount + 1,\r\n    );\r\n  }, [currentPage, pages]);\r\n\r\n  const getAllPreviousPages = () => {\r\n    return pages.slice(0, middlePages[0] - 1);\r\n  };\r\n\r\n  const previousPages = React.useMemo(() => {\r\n    if (isReachedToFirst) {\r\n      return [];\r\n    }\r\n    if (getAllPreviousPages().length < 1) {\r\n      return [];\r\n    }\r\n    return pages\r\n      .slice(0, edgePageCount)\r\n      .filter((p) => !middlePages.includes(p));\r\n  }, [currentPage, pages]);\r\n\r\n  const getAllNextPages = React.useMemo(() => {\r\n    return pages.slice(\r\n      middlePages[middlePages.length - 1],\r\n      pages[pages.length],\r\n    );\r\n  }, [pages, middlePages]);\r\n\r\n  const nextPages = React.useMemo(() => {\r\n    if (isReachedToLast) {\r\n      return [];\r\n    }\r\n    if (getAllNextPages.length < 1) {\r\n      return [];\r\n    }\r\n    return pages\r\n      .slice(pages.length - edgePageCount, pages.length)\r\n      .filter((p) => !middlePages.includes(p));\r\n  }, [middlePages, pages]);\r\n\r\n  const isPreviousTruncable = React.useMemo(() => {\r\n    // Is truncable if first value of middlePage is larger than last value of previousPages\r\n    return middlePages[0] > previousPages[previousPages.length - 1] + 1;\r\n  }, [previousPages, middlePages]);\r\n\r\n  const isNextTruncable = React.useMemo(() => {\r\n    // Is truncable if last value of middlePage is larger than first value of previousPages\r\n    return middlePages[middlePages.length - 1] + 1 < nextPages[0];\r\n  }, [nextPages, middlePages]);\r\n\r\n  return {\r\n    currentPage,\r\n    setCurrentPage,\r\n    truncableText,\r\n    truncableClassName,\r\n    pages,\r\n    hasPreviousPage,\r\n    hasNextPage,\r\n    previousPages,\r\n    isPreviousTruncable,\r\n    middlePages,\r\n    isNextTruncable,\r\n    nextPages,\r\n  };\r\n};\r\n\r\nexport default usePagination;\r\n","import React, { FC } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport usePagination from \"./hooks/usePagination\";\r\nimport {\r\n  IPagination,\r\n  IPaginationProps,\r\n  ButtonProps,\r\n  PageButtonProps,\r\n} from \"./Pagination.d\";\r\n\r\nexport const PrevButton: FC<ButtonProps> = ({\r\n  className,\r\n  children,\r\n  ...buttonProps\r\n}) => {\r\n  const pagination: IPagination = React.useContext(PaginationContext);\r\n  const previous = () => {\r\n    if (pagination.currentPage + 1 > 1) {\r\n      pagination.setCurrentPage(pagination.currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={className}\r\n      {...buttonProps}\r\n      onClick={() => previous()}\r\n      disabled={pagination.currentPage === 0}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const NextButton: FC<ButtonProps> = ({\r\n  className,\r\n  children,\r\n  ...buttonProps\r\n}) => {\r\n  const pagination: IPagination = React.useContext(PaginationContext);\r\n  const next = () => {\r\n    if (pagination.currentPage + 1 < pagination.pages.length) {\r\n      pagination.setCurrentPage(pagination.currentPage + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={className}\r\n      {...buttonProps}\r\n      onClick={() => next()}\r\n      disabled={pagination.currentPage === pagination.pages.length - 1}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\ninterface ITruncableElementProps {\r\n  prev?: boolean;\r\n}\r\n\r\nexport const TruncableElement: FC<ITruncableElementProps> = ({ prev }) => {\r\n  const pagination: IPagination = React.useContext(PaginationContext);\r\n\r\n  const {\r\n    isPreviousTruncable,\r\n    isNextTruncable,\r\n    truncableText = \"...\",\r\n    truncableClassName = \"\",\r\n  } = pagination;\r\n\r\n  return (isPreviousTruncable && prev === true) ||\r\n    (isNextTruncable && !prev) ? (\r\n    <span className={truncableClassName}>{truncableText}</span>\r\n  ) : null;\r\n};\r\n\r\nexport const PageButton: FC<PageButtonProps> = ({\r\n  className,\r\n  activeClassName = \"\",\r\n  inactiveClassName = \"\",\r\n}) => {\r\n  const pagination: IPagination = React.useContext(PaginationContext);\r\n\r\n  const renderPageButton = (page: number) => (\r\n    <span\r\n      key={page}\r\n      className={classNames(className, {\r\n        [activeClassName]: pagination.currentPage + 1 === page,\r\n        [inactiveClassName]: pagination.currentPage + 1 !== page,\r\n      })}\r\n      onClick={() => pagination.setCurrentPage(page - 1)}\r\n    >\r\n      {page}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {pagination.previousPages.map(renderPageButton)}\r\n      <TruncableElement prev />\r\n      {pagination.middlePages.map(renderPageButton)}\r\n      <TruncableElement />\r\n      {pagination.nextPages.map(renderPageButton)}\r\n    </>\r\n  );\r\n};\r\n\r\nconst defaultState: IPagination = {\r\n  currentPage: 0,\r\n  setCurrentPage: () => {},\r\n  truncableText: \"...\",\r\n  truncableClassName: \"\",\r\n  pages: [],\r\n  hasPreviousPage: false,\r\n  hasNextPage: false,\r\n  previousPages: [],\r\n  isPreviousTruncable: false,\r\n  middlePages: [],\r\n  isNextTruncable: false,\r\n  nextPages: [],\r\n};\r\n\r\nconst PaginationContext: React.Context<IPagination> =\r\n  React.createContext(defaultState);\r\n\r\nexport const Pagination = (paginationProps: IPaginationProps) => {\r\n  const pagination = usePagination(paginationProps);\r\n\r\n  return (\r\n    <PaginationContext.Provider value={pagination}>\r\n      <div className={paginationProps.className}>\r\n        {paginationProps.children}\r\n      </div>\r\n    </PaginationContext.Provider>\r\n  );\r\n};\r\n\r\nPagination.PrevButton = PrevButton;\r\nPagination.NextButton = NextButton;\r\nPagination.PageButton = PageButton;\r\n"],"names":["usePagination","currentPage","setCurrentPage","truncableText","truncableClassName","totalPages","edgePageCount","middlePagesSiblingCount","pages","Array","fill","map","_","i","hasPreviousPage","hasNextPage","isReachedToFirst","isReachedToLast","middlePages","React","useMemo","middlePageCount","slice","getAllPreviousPages","previousPages","length","filter","p","includes","getAllNextPages","nextPages","isPreviousTruncable","isNextTruncable","PrevButton","className","children","buttonProps","pagination","useContext","PaginationContext","previous","onClick","disabled","NextButton","next","TruncableElement","prev","PageButton","activeClassName","inactiveClassName","renderPageButton","page","key","classNames","defaultState","createContext","Pagination","paginationProps","Provider","value"],"mappings":"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"}